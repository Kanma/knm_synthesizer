/*
 * SPDX-FileCopyrightText: 2025 Philip Abbet <philip.abbet@gmail.com>
 *
 * SPDX-FileContributor: Philip Abbet <philip.abbet@gmail.com>
 *
 * SPDX-License-Identifier: MIT
*/

TEST_CASE("LFO")
{
    SECTION("f = 20Hz, no delay, 22050Hz")
    {
        float ref[] = {
            0.2322f, 0.4644f, 0.6966f, 0.9288f, 0.8390f, 0.6068f, 0.3746f, 0.1424f, -0.0898f,
            -0.3220f, -0.5542f, -0.7864f, -0.9814f, -0.7492f, -0.5170f, -0.2848f, -0.0526f, 0.1796f,
            0.4118f, 0.6440f, 0.8762f, 0.8916f, 0.6594f, 0.4272f, 0.1950f, -0.0372f, -0.2694f,
            -0.5016f, -0.7338f, -0.9660f, -0.8018f, -0.5696f, -0.3374f, -0.1052f, 0.1270f, 0.3592f,
            0.5914f, 0.8236f, 0.9442f, 0.7120f, 0.4798f, 0.2476f, 0.0154f, -0.2168f, -0.4490f,
            -0.6812f, -0.9134f, -0.8544f, -0.6222f, -0.3900f, -0.1578f, 0.0744f, 0.3066f, 0.5388f,
            0.7710f, 0.9968f, 0.7646f, 0.5324f, 0.3002f, 0.0680f, -0.1642f, -0.3964f, -0.6286f,
            -0.8608f, -0.9070f, -0.6748f, -0.4426f, -0.2104f, 0.0218f, 0.2540f, 0.4862f, 0.7184f,
            0.9506f, 0.8172f, 0.5850f, 0.3528f, 0.1206f, -0.1116f, -0.3438f, -0.5760f, -0.8082f,
            -0.9596f, -0.7274f, -0.4952f, -0.2630f, -0.0308f, 0.2014f, 0.4336f, 0.6658f, 0.8980f,
            0.8698f, 0.6376f, 0.4054f, 0.1732f, -0.0590f, -0.2912f, -0.5234f, -0.7556f, -0.9878f,
            -0.7800f,
        };

        SynthesizerSettings setting(22050);
        Lfo lfo(setting);

        lfo.start(0.0f, 20.0f);

        for (int i = 0; i < 100; ++i)
        {
            lfo.process();
            REQUIRE(lfo.value() == Approx(ref[i]).margin(0.0001f));
        }
    }

    SECTION("f = 10Hz, 10ms delay, 44100Hz")
    {
        float ref[] = {
            0.0000f, 0.0000f, 0.0000f, 0.0000f, 0.0000f, 0.0000f, 0.0063f, 0.0644f, 0.1224f, 0.1805f,
            0.2385f, 0.2966f, 0.3546f, 0.4127f, 0.4707f, 0.5288f, 0.5868f, 0.6449f, 0.7029f, 0.7610f,
            0.8190f, 0.8771f, 0.9351f, 0.9932f, 0.9488f, 0.8907f, 0.8327f, 0.7746f, 0.7166f, 0.6585f,
            0.6005f, 0.5424f, 0.4844f, 0.4263f, 0.3683f, 0.3102f, 0.2522f, 0.1941f, 0.1361f, 0.0780f,
            0.0200f, -0.0381f, -0.0961f, -0.1542f, -0.2122f, -0.2703f, -0.3283f, -0.3864f, -0.4444f,
            -0.5025f, -0.5605f, -0.6186f, -0.6766f, -0.7347f, -0.7927f, -0.8508f, -0.9088f, -0.9669f,
            -0.9751f, -0.9170f, -0.8590f, -0.8009f, -0.7429f, -0.6848f, -0.6268f, -0.5687f, -0.5107f,
            -0.4526f, -0.3946f, -0.3365f, -0.2785f, -0.2204f, -0.1624f, -0.1043f, -0.0463f, 0.0118f,
            0.0698f, 0.1279f, 0.1859f, 0.2440f, 0.3020f, 0.3601f, 0.4181f, 0.4762f, 0.5342f, 0.5923f,
            0.6503f, 0.7084f, 0.7664f, 0.8245f, 0.8825f, 0.9406f, 0.9986f, 0.9433f, 0.8853f, 0.8272f,
            0.7692f, 0.7111f, 0.6531f, 0.5950f,
        };

        SynthesizerSettings setting(44100);
        Lfo lfo(setting);

        lfo.start(0.01f, 10.0f);

        for (int i = 0; i < 100; ++i)
        {
            lfo.process();
            REQUIRE(lfo.value() == Approx(ref[i]).margin(0.0001f));
        }
    }
}
